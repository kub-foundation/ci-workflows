name: Reusable Go + Cloud Run Deploy

on:
  workflow_call:
    inputs:
      go_version:
        required: false
        type: string
        default: "1.22"
      service_name:
        required: true
        type: string
      deploy_on:
        required: true
        type: string # main หรือ tag
    secrets:
      GCP_PROJECT_ID:
        required: true
      GCP_REGION:
        required: true
      GCP_SA_KEY:
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        if: ${{ inputs.deploy_on == 'main' }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go_version }}

      - name: Build Go
        if: ${{ inputs.deploy_on == 'main' }}
        run: go build ./...

      - name: Run Linter
        if: ${{ inputs.deploy_on == 'main' }}
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker auth
        run: gcloud auth configure-docker -q

      - name: Build and Push Docker image
        run: |
          if [ "${{ inputs.deploy_on }}" = "main" ]; then
            IMAGE="gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ inputs.service_name }}:main-${{ github.sha }}"
          else
            VERSION=${GITHUB_REF#refs/tags/}
            IMAGE="gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ inputs.service_name }}:$VERSION"
          fi
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ inputs.service_name }} \
            --image $IMAGE \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --quiet
